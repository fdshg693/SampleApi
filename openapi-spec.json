{
  "openapi": "3.0.4",
  "info": {
    "title": "SampleApi | v1",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:7082/"
    }
  ],
  "paths": {
    "/api/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health check endpoint",
        "description": "Returns the API health status and current server time for quick smoke tests.",
        "operationId": "Health",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/chat": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Send chat messages to AI",
        "description": "Accepts an array of chat messages and returns an AI-generated response. Supports OpenAI Chat Completions API or falls back to a stub echo if the API key is not configured.",
        "operationId": "Chat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/todos": {
      "get": {
        "tags": [
          "Todos"
        ],
        "summary": "Get all TODO items",
        "description": "Retrieves all TODO items from the in-memory store, including their id, title, description, completion status, and timestamps.",
        "operationId": "GetTodos",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Todos"
        ],
        "summary": "Create a new TODO item",
        "description": "Creates a new TODO item with the specified title and optional description. Title must be 1-200 characters, description must be 0-1000 characters.",
        "operationId": "CreateTodo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/todos/{id}": {
      "put": {
        "tags": [
          "Todos"
        ],
        "summary": "Update an existing TODO item",
        "description": "Updates a TODO item's title, description, or completion status. All fields are optional in the request body. Returns 404 if the TODO item is not found.",
        "operationId": "UpdateTodo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Todos"
        ],
        "summary": "Delete a TODO item",
        "description": "Permanently removes a TODO item from the in-memory store. Returns 204 No Content on success, 404 if the item is not found.",
        "operationId": "DeleteTodo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChatMessage": {
        "required": [
          "role",
          "content"
        ],
        "type": "object",
        "properties": {
          "role": {
            "pattern": "^(user|assistant|system)$",
            "type": "string"
          },
          "content": {
            "maxLength": 5000,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "ChatRequest": {
        "required": [
          "messages"
        ],
        "type": "object",
        "properties": {
          "messages": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessage"
            }
          },
          "model": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateTodoRequest": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTodoRequest": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isCompleted": {
            "type": "boolean",
            "nullable": true
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health"
    },
    {
      "name": "Chat"
    },
    {
      "name": "Todos"
    }
  ]
}